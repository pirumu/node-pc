// // =============================================
// // ðŸš¨ AUTO-GENERATED FILE - DO NOT EDIT! ðŸš¨
// // Generated by: generate-mappers.ts
// // Date: 2025-07-16T16:30:51.585Z
// // =============================================
//
// import { Withdraw } from '../schema/withdraw.schema.ts';
// import { WithdrawEntity } from '../entity/withdraw.entity';
//
// export class WithdrawMapper {
//   public static toModel(entity: WithdrawEntity): Withdraw {
//     const model = new Withdraw();
//
//     // Common fields
//
//     // Schema-only fields (manual mapping required)
//     // model.sessionId = ?; // TODO: Manual mapping
//     // model.required = ?; // TODO: Manual mapping
//     // model.required = ?; // TODO: Manual mapping
//     // model.required = ?; // TODO: Manual mapping
//     // model.required = ?; // TODO: Manual mapping
//     // model.required = ?; // TODO: Manual mapping
//     // model.required = ?; // TODO: Manual mapping
//     // model.required = ?; // TODO: Manual mapping
//     // model.required = ?; // TODO: Manual mapping
//     // model.required = ?; // TODO: Manual mapping
//     // model.timestamps = ?; // TODO: Manual mapping
//     // model.WithdrawModel = ?; // TODO: Manual mapping
//
//     return model;
//   }
//
//   public static toEntity(model: Withdraw): WithdrawEntity {
//     return new WithdrawEntity({
//       // Common fields
//       // Entity-only fields (manual mapping required)
//       // deviceId: undefined, // TODO: Manual mapping
//       // deviceName: undefined, // TODO: Manual mapping
//       // changeQuantity: undefined, // TODO: Manual mapping
//       // shelfName: undefined, // TODO: Manual mapping
//       // roomName: undefined, // TODO: Manual mapping
//       // siteName: undefined, // TODO: Manual mapping
//     });
//   }
//
//   public static toEntities(models: Withdraw[]): WithdrawEntity[] {
//     return models.map((model) => this.toEntity(model));
//   }
//
//   public static toModelArray(entities: WithdrawEntity[]): Withdraw[] {
//     return entities.map((entity) => this.toModel(entity));
//   }
// }
