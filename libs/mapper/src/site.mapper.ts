// // =============================================
// // ðŸš¨ AUTO-GENERATED FILE - DO NOT EDIT! ðŸš¨
// // Generated by: generate-mappers.ts
// // =============================================
//
// import { Site } from '../schema/site.schema.ts';
// import { SiteEntity } from '../entity/site.entity';
//
// export class SiteMapper {
//   public static toModel(entity: SiteEntity): Site {
//     const model = new Site();
//
//     // Common fields
//
//     // Schema-only fields (manual mapping required)
//     // model.required = ?; // TODO: Manual mapping
//     // model.email = ?; // TODO: Manual mapping
//     // model.mobile = ?; // TODO: Manual mapping
//     // model.reportSchedule = ?; // TODO: Manual mapping
//     // model.reportTiming = ?; // TODO: Manual mapping
//     // model.reportFormat = ?; // TODO: Manual mapping
//     // model.lowStockSchedule = ?; // TODO: Manual mapping
//     // model.lowStockTiming = ?; // TODO: Manual mapping
//     // model.typeNotification = ?; // TODO: Manual mapping
//     // model.timestamps = ?; // TODO: Manual mapping
//     // model.SiteModel = ?; // TODO: Manual mapping
//
//     return model;
//   }
//
//   public static toEntity(model: Site): SiteEntity {
//     return new SiteEntity({
//       // Common fields
//       // Entity-only fields (manual mapping required)
//       // name: undefined, // TODO: Manual mapping
//     });
//   }
//
//   public static toEntities(models: Site[]): SiteEntity[] {
//     return models.map((model) => this.toEntity(model));
//   }
//
//   public static toModelArray(entities: SiteEntity[]): Site[] {
//     return entities.map((entity) => this.toModel(entity));
//   }
// }
